module.exports=function(e){var t={};function r(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,s){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(s,n,function(t){return e[t]}.bind(null,n));return s},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s="./index.js")}({"./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! exports provided: getUserFunction, loginFunction, signupFunction, validateTokenFunction, generateCodeFunction, validateCodeFunction, sendEmailValidationFunction, validateEmailTokenFunction, requestResetPasswordFunction, validateResetPasswordTokenFunction, resetPasswordFunction, isAliveFunction */function(e,t,r){"use strict";r.r(t),r.d(t,"getUserFunction",function(){return c}),r.d(t,"loginFunction",function(){return u}),r.d(t,"signupFunction",function(){return f}),r.d(t,"validateTokenFunction",function(){return p}),r.d(t,"generateCodeFunction",function(){return y}),r.d(t,"validateCodeFunction",function(){return g}),r.d(t,"sendEmailValidationFunction",function(){return O}),r.d(t,"validateEmailTokenFunction",function(){return E}),r.d(t,"requestResetPasswordFunction",function(){return S}),r.d(t,"validateResetPasswordTokenFunction",function(){return C}),r.d(t,"resetPasswordFunction",function(){return R}),r.d(t,"isAliveFunction",function(){return h});var s=r(/*! ./src/controllers/user/find */"./src/controllers/user/find.js"),n=r(/*! ./src/controllers/user/login */"./src/controllers/user/login.js"),o=r(/*! ./src/controllers/user/signup */"./src/controllers/user/signup.js"),a=r(/*! ./src/controllers/user/validateToken */"./src/controllers/user/validateToken.js"),d=r(/*! ./src/controllers/user/phone */"./src/controllers/user/phone.js"),i=r(/*! ./src/controllers/user/email */"./src/controllers/user/email.js"),l=r(/*! ./src/controllers/user/resetPassword */"./src/controllers/user/resetPassword.js");const c=s.getUser,u=n.login,f=o.signup,p=a.validateToken,y=d.generateCode,g=d.validateCode,O=i.sendEmailValidation,E=i.validateEmailToken,S=l.requestResetPassword,C=l.validateResetPasswordToken,R=l.resetPassword,h=()=>({statusCode:200,headers:{"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},body:JSON.stringify({})})},"./src/controllers/user/email.js":
/*!***************************************!*\
  !*** ./src/controllers/user/email.js ***!
  \***************************************/
/*! exports provided: sendEmailValidation, validateEmailToken */function(e,t,r){"use strict";r.r(t),r.d(t,"sendEmailValidation",function(){return f}),r.d(t,"validateEmailToken",function(){return p});var s=r(/*! aws-sdk */"aws-sdk"),n=r.n(s),o=r(/*! jsonwebtoken */"jsonwebtoken"),a=r.n(o),d=r(/*! ../../status */"./src/status.js"),i=r(/*! ../../db/Mongodb */"./src/db/Mongodb.js");n.a.config.region="us-west-2";const l=new n.a.SES;let c=null;const u={"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},f=async e=>{const{email:t,ida:r}=JSON.parse(e.body),{SECRET:s,MONGO_URL:n,WEB_URI:o}=e.stageVariables||{SECRET:"weednaoehganja",MONGO_URL:process.env.MONGO_URL,WEB_URI:"http://localhost:8080"};let f=/^[a-z0-9._-]{2,}@[a-z0-9]{2,}\.[a-z]{2,}(\.[a-z]{2})?$/.test(t);if(!f)return{statusCode:d.default.BAD_REQUEST.code,headers:u,body:JSON.stringify({error:"email/invalid-email"})};if(!(f=/^[0-9a-fA-F]{24}$/.test(r)))return{statusCode:d.default.BAD_REQUEST.code,headers:u,body:JSON.stringify({error:"email/invalid-ida"})};const p={email:{address:t,valid:!1,token:a.a.sign({email:t,ida:r},s,{expiresIn:"1h"})}},y=(c=await Object(i.default)({conn:c,mongoUrl:n})).model("users");let g,O;try{g=await y.findOneAndUpdate({_id:r},p,{new:!0})}catch(e){return{statusCode:d.default.INTERNAL_SERVER_ERROR.code,headers:u,body:JSON.stringify({error:e})}}if(!g)return{statusCode:d.default.BAD_REQUEST.code,headers:u,body:JSON.stringify({error:"phone/invalid-ida"})};try{O=await((e,t,r)=>new Promise((s,n)=>{l.sendEmail(((e,t,r)=>({Destination:{ToAddresses:[t.address]},Message:{Body:{Html:{Charset:"UTF-8",Data:`Clique <a href="${r}/ativacao/${e}?token=${t.token}">aqui</a> para validar sua conta.`},Text:{Charset:"UTF-8",Data:`Seu link de ativação: ${r}/ativacao/${e}?token=${t.token}`}},Subject:{Charset:"UTF-8",Data:"Confirme sua conta no SOM"}},Source:"gabrielfurlan05@gmail.com"}))(e,t,r),(e,t)=>{e?n(e):s(t)})}))(r,p.email,o)}catch(e){return{statusCode:d.default.BAD_REQUEST.code,headers:u,body:JSON.stringify({error:"email/to-send"})}}return{statusCode:d.default.SUCCESS.code,headers:u,body:JSON.stringify(O)}},p=async e=>{const{ida:t,token:r}=JSON.parse(e.body),{SECRET:s,MONGO_URL:n}=e.stageVariables||{SECRET:"weednaoehganja",MONGO_URL:process.env.MONGO_URL};if(!/^[0-9a-fA-F]{24}$/.test(t))return{statusCode:d.default.BAD_REQUEST.code,headers:u,body:JSON.stringify({error:"email/invalid-ida"})};const o=(c=await Object(i.default)({conn:c,mongoUrl:n})).model("users");let l;try{l=await o.findOne({_id:t})}catch(e){return{statusCode:d.default.INTERNAL_SERVER_ERROR.code,headers:u,body:JSON.stringify({error:e})}}if(!l)return{statusCode:d.default.BAD_REQUEST.code,headers:u,body:JSON.stringify({error:"email/invalid-ida"})};if(l.email.token!==r)return{statusCode:d.default.BAD_REQUEST.code,headers:u,body:JSON.stringify({error:"email/invalid-token"})};try{await(()=>new Promise((e,t)=>{a.a.verify(r,s,(r,s)=>{r?t(r):e(s)})}))()}catch(e){return"TokenExpiredError"===e.name?{statusCode:d.default.BAD_REQUEST.code,headers:u,body:JSON.stringify({error:"email/expired-token"})}:{statusCode:d.default.BAD_REQUEST.code,headers:u,body:JSON.stringify({error:"email/invalid-token"})}}try{await o.findOneAndUpdate({_id:t},{"email.valid":!0},{new:!0})}catch(e){return{statusCode:d.default.INTERNAL_SERVER_ERROR.code,headers:u,body:JSON.stringify({error:e})}}const f=a.a.sign({username:l.username,ida:l._id},s,{expiresIn:"1h"});return{statusCode:d.default.SUCCESS.code,headers:u,body:JSON.stringify({data:{ida:t,email:l.email.address,sessionToken:f}})}}},"./src/controllers/user/find.js":
/*!**************************************!*\
  !*** ./src/controllers/user/find.js ***!
  \**************************************/
/*! exports provided: getUser, default */function(e,t,r){"use strict";r.r(t),r.d(t,"getUser",function(){return l});var s=r(/*! dotenv */"dotenv"),n=r.n(s),o=r(/*! ../../status */"./src/status.js"),a=r(/*! ../../db/Mongodb */"./src/db/Mongodb.js");n.a.config();let d=null;const i={"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},l=async e=>{const{ida:t}=e.pathParameters,{MONGO_URL:r}=e.stageVariables||{MONGO_URL:process.env.MONGO_URL};if(!/^[0-9a-fA-F]{24}$/.test(t))return{statusCode:o.default.BAD_REQUEST.code,headers:i,body:JSON.stringify({error:"email/invalid-email"})};try{d=await Object(a.default)({conn:d,mongoUrl:r})}catch(e){return{statusCode:o.default.INTERNAL_SERVER_ERROR.code,headers:{"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},body:JSON.stringify({error:e})}}const s=d.model("users"),n=await s.findOne({_id:t});if(!n)return{status:o.default.BAD_REQUEST.code,headers:{"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},body:JSON.stringify({error:"user/not-found"})};const l={ida:n._id,username:n.username,email:n.email,phone:n.phone,last_login:n.last_login};return{statusCode:o.default.SUCCESS.code,headers:{"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},body:JSON.stringify({data:{user:l}})}};t.default=l},"./src/controllers/user/login.js":
/*!***************************************!*\
  !*** ./src/controllers/user/login.js ***!
  \***************************************/
/*! exports provided: login, default */function(e,t,r){"use strict";r.r(t),r.d(t,"login",function(){return f});var s=r(/*! bcrypt */"bcrypt"),n=r.n(s),o=r(/*! jsonwebtoken */"jsonwebtoken"),a=r.n(o),d=r(/*! dotenv */"dotenv"),i=r.n(d),l=r(/*! ../../status */"./src/status.js"),c=r(/*! ../../db/Mongodb */"./src/db/Mongodb.js");i.a.config();let u=null;const f=async e=>{const{username:t,password:r}=JSON.parse(e.body),{SECRET:s,MONGO_URL:o}=e.stageVariables||{SECRET:"weednaoehganja",MONGO_URL:process.env.MONGO_URL};try{const e=(u=await Object(c.default)({conn:u,mongoUrl:o})).model("users"),d=await e.findOne({username:t});if(!d)return{status:l.default.UNAUTHORIZED.code,headers:{"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},body:JSON.stringify({error:"user/not-found"})};if(!await n.a.compare(r,d.password))return{statusCode:l.default.UNAUTHORIZED.code,headers:{"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},body:JSON.stringify({error:"user/wrong-password"})};const i=a.a.sign({username:t,ida:d._id},s,{expiresIn:"1h"}),f={ida:d._id,username:d.username,email:d.email,phone:d.phone,last_login:d.last_login};return{statusCode:l.default.ACCEPTED.code,headers:{"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},body:JSON.stringify({data:{user:f,ida:f.ida,token:i}})}}catch(e){return{statusCode:l.default.INTERNAL_SERVER_ERROR.code,headers:{"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},body:JSON.stringify({error:e})}}};t.default=f},"./src/controllers/user/phone.js":
/*!***************************************!*\
  !*** ./src/controllers/user/phone.js ***!
  \***************************************/
/*! exports provided: generateCode, validateCode */function(e,t,r){"use strict";r.r(t),r.d(t,"generateCode",function(){return c}),r.d(t,"validateCode",function(){return u});var s=r(/*! aws-sdk */"aws-sdk"),n=r.n(s),o=r(/*! ../../db/Mongodb */"./src/db/Mongodb.js"),a=r(/*! ../../status */"./src/status.js");n.a.config.region="us-west-2";let d=null;const i={"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},l=()=>{let e="";for(let t=0;t<6;t+=1)e+=0===t?"123456789".charAt(Math.floor(Math.random()*"123456789".length)):"0123456789".charAt(Math.floor(Math.random()*"0123456789".length));return e},c=async e=>{const{phone:t,ida:r}=JSON.parse(e.body);let s=/^\+[0-9]{9,}$/.test(t);if(!s)return{statusCode:a.default.BAD_REQUEST.code,headers:i,body:JSON.stringify({error:"phone/invalid-number"})};if(!(s=/^[0-9a-fA-F]{24}$/.test(r)))return{statusCode:a.default.BAD_REQUEST.code,headers:i,body:JSON.stringify({error:"phone/invalid-ida"})};const c={phone:{number:t,valid:!1,confirmation_code:l()}},{MONGO_URL:u}=e.stageVariables||{MONGO_URL:process.env.MONGO_URL},f=(d=await Object(o.default)({conn:d,mongoUrl:u})).model("users");let p;try{p=await f.findOneAndUpdate({_id:r},c,{new:!0})}catch(e){return{statusCode:a.default.INTERNAL_SERVER_ERROR.code,headers:i,body:JSON.stringify({error:e})}}if(!p)return{statusCode:a.default.BAD_REQUEST.code,headers:i,body:JSON.stringify({error:"phone/invalid-ida"})};const y=new n.a.SNS,g={Message:`IDA-${c.phone.confirmation_code} é o código de confirmação de seu telefone para sua conta no SOM/IDA.`,MessageStructure:"string",PhoneNumber:t},O=await y.publish(g),E=await O.send();return E.error?{statusCode:a.default.INTERNAL_SERVER_ERROR.code,headers:i,body:JSON.stringify({error:E.error})}:{statusCode:a.default.SUCCESS.code,headers:i,body:JSON.stringify({data:{ida:p._id,phone:{number:t,valid:!1}}})}},u=async e=>{const{code:t,ida:r}=JSON.parse(e.body);if(!/^[0-9a-fA-F]{24}$/.test(r))return{statusCode:a.default.BAD_REQUEST.code,headers:i,body:JSON.stringify({error:"phone/invalid-ida"})};const{MONGO_URL:s}=e.stageVariables||{MONGO_URL:process.env.MONGO_URL},n=(d=await Object(o.default)({conn:d,mongoUrl:s})).model("users");let l;try{l=await n.findOne({_id:r})}catch(e){return{statusCode:a.default.INTERNAL_SERVER_ERROR.code,headers:i,body:JSON.stringify({error:e})}}if(!l)return{statusCode:a.default.BAD_REQUEST.code,headers:i,body:JSON.stringify({error:"phone/invalid-ida"})};if(l.phone.confirmation_code!==t)return{statusCode:a.default.BAD_REQUEST.code,headers:i,body:JSON.stringify({error:"phone/invalid-code"})};const c={phone:{number:l.phone.number,valid:!0,confirmation_code:null}};try{l=await n.findOneAndUpdate({_id:r},c,{new:!0})}catch(e){return{statusCode:a.default.INTERNAL_SERVER_ERROR.code,headers:i,body:JSON.stringify({err:e})}}return{statusCode:a.default.SUCCESS.code,headers:i,body:JSON.stringify({data:{ida:l._id,phone:{number:l.phone.number,valid:!0}}})}}},"./src/controllers/user/resetPassword.js":
/*!***********************************************!*\
  !*** ./src/controllers/user/resetPassword.js ***!
  \***********************************************/
/*! exports provided: requestResetPassword, validateResetPasswordToken, resetPassword */function(e,t,r){"use strict";r.r(t),r.d(t,"requestResetPassword",function(){return y}),r.d(t,"validateResetPasswordToken",function(){return g}),r.d(t,"resetPassword",function(){return O});var s=r(/*! aws-sdk */"aws-sdk"),n=r.n(s),o=r(/*! jsonwebtoken */"jsonwebtoken"),a=r.n(o),d=r(/*! ../../status */"./src/status.js"),i=r(/*! ../../db/Mongodb */"./src/db/Mongodb.js"),l=r(/*! ../utils */"./src/controllers/utils.js");n.a.config.region="us-west-2";const c=new n.a.SES,u=new n.a.SNS;let f=null;const p={"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},y=async e=>{const{input:t}=JSON.parse(e.body),{SECRET:r,MONGO_URL:s,WEB_URI:n}=e.stageVariables||{SECRET:"weednaoehganja",MONGO_URL:process.env.MONGO_URL,WEB_URI:"http://localhost:8080"},o=/^[a-z0-9._-]{2,}@[a-z0-9]{2,}\.[a-z0-9]{2,}(\.[a-z0-9]{2,})*?$/.test(t),l=/^\+[0-9]{9,}$/.test(t);if(!o&&!l)return{statusCode:d.default.BAD_REQUEST.code,headers:p,body:JSON.stringify({error:"reset-password/invalid-input"})};const y={$or:[{"phone.number":t},{"email.address":t}]},g=(f=await Object(i.default)({conn:f,mongoUrl:s})).model("users");let O;try{O=await g.findOne(y)}catch(e){return{statusCode:d.default.INTERNAL_SERVER_ERROR.code,headers:p,body:JSON.stringify({error:e})}}if(!O)return{statusCode:d.default.BAD_REQUEST.code,headers:p,body:JSON.stringify({error:"reset-password/user-not-found"})};const E=a.a.sign({email:O.email,phone:O.phone,ida:O._id},r,{expiresIn:"1h"});if(o)try{await((e,t,r)=>new Promise((e,s)=>{c.sendEmail(((e,t,r)=>({Destination:{ToAddresses:[t.address]},Message:{Body:{Html:{Charset:"UTF-8",Data:`Clique <a href="${r}/reset-password?token=${t.token}">aqui</a> para resetar sua senha.`},Text:{Charset:"UTF-8",Data:`Seu link de reset de senha: ${r}/reset-password?token=${t.token}`}},Subject:{Charset:"UTF-8",Data:"Link para resetar sua Ssnha"}},Source:"gabrielfurlan05@gmail.com"}))(0,t,r),(t,r)=>{t?s(t):e(r)})}))(O._id,{address:O.email.address,token:E},n)}catch(e){return{statusCode:d.default.BAD_REQUEST.code,headers:p,body:JSON.stringify({error:"reset-password/to-send-reset-email"})}}else if(l){const e={Message:`Seu link de reset de senha: ${n}/reset-password?token=${E}`,MessageStructure:"string",PhoneNumber:O.phone.number};try{const t=await u.publish(e);await t.send()}catch(e){return{statusCode:d.default.BAD_REQUEST.code,headers:p,body:JSON.stringify({error:"reset-password/to-send-reset-sms"})}}}return{statusCode:d.default.SUCCESS.code,headers:p,body:JSON.stringify({status:"reset-password/success",data:{token:E}})}},g=async e=>{const{token:t}=JSON.parse(e.body),{SECRET:r}=e.stageVariables||{SECRET:"weednaoehganja",MONGO_URL:process.env.MONGO_URL};let s;try{s=await(()=>new Promise((e,s)=>{a.a.verify(t,r,(t,r)=>{t?s(t):e(r)})}))()}catch(e){return"TokenExpiredError"===e.name?{statusCode:d.default.BAD_REQUEST.code,headers:p,body:JSON.stringify({error:"validate-token/expired-token"})}:{statusCode:d.default.BAD_REQUEST.code,headers:p,body:JSON.stringify({error:"validate-token/invalid-token"})}}return{statusCode:d.default.SUCCESS.code,headers:p,body:JSON.stringify({status:"validate-token/success",data:s})}},O=async e=>{const{token:t,password:r}=JSON.parse(e.body),{SECRET:s,MONGO_URL:n}=e.stageVariables||{SECRET:"weednaoehganja",MONGO_URL:process.env.MONGO_URL};let o;try{o=await(()=>new Promise((e,r)=>{a.a.verify(t,s,(t,s)=>{t?r(t):e(s)})}))()}catch(e){return"TokenExpiredError"===e.name?{statusCode:d.default.BAD_REQUEST.code,headers:p,body:JSON.stringify({error:"reset-password/expired-token"})}:{statusCode:d.default.BAD_REQUEST.code,headers:p,body:JSON.stringify({error:"reset-password/invalid-token"})}}console.log(o);const c=(f=await Object(i.default)({conn:f,mongoUrl:n})).model("users");let u;try{u=await c.findOne({_id:o.ida})}catch(e){return{statusCode:d.default.INTERNAL_SERVER_ERROR.code,headers:p,body:JSON.stringify({error:e})}}if(!u)return{statusCode:d.default.BAD_REQUEST.code,headers:p,body:JSON.stringify({error:"reset-password/user-not-found"})};if(-1!==u.reseted_passwords.findIndex(e=>e.token===t))return{statusCode:d.default.BAD_REQUEST.code,headers:p,body:JSON.stringify({error:"reset-password/expired-token"})};u.reseted_passwords.push({password:u.password,token:t});const y=await Object(l.hashPassword)(r);return u.password=y,await c.findOneAndUpdate({_id:u._id},u,{new:!0}),{statusCode:d.default.SUCCESS.code,headers:p,body:JSON.stringify({status:"reset-password/success",data:{ida:u._id}})}}},"./src/controllers/user/signup.js":
/*!****************************************!*\
  !*** ./src/controllers/user/signup.js ***!
  \****************************************/
/*! exports provided: signup, default */function(e,t,r){"use strict";r.r(t),r.d(t,"signup",function(){return u});var s=r(/*! dotenv */"dotenv"),n=r.n(s),o=r(/*! jsonwebtoken */"jsonwebtoken"),a=r.n(o),d=r(/*! ../utils */"./src/controllers/utils.js"),i=r(/*! ../../db/Mongodb */"./src/db/Mongodb.js"),l=r(/*! ../../status */"./src/status.js");n.a.config();let c=null;const u=async e=>{const{username:t,password:r}=JSON.parse(e.body),{SECRET:s,MONGO_URL:n}=e.stageVariables||{SECRET:"weednaoehganja",MONGO_URL:process.env.MONGO_URL};try{const e=(c=await Object(i.default)({conn:c,mongoUrl:n})).model("users");if(await e.findOne({username:t}))return{statusCode:l.default.UNAUTHORIZED.code,headers:{"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},body:JSON.stringify({error:"auth/duplicated-user"})};const o=new e({username:t,password:await Object(d.hashPassword)(r)});await o.save();const u=a.a.sign({username:t,ida:o._id},s,{expiresIn:"1h"});return{statusCode:l.default.CREATED.code,headers:{"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},body:JSON.stringify({data:{ida:o._id,token:u}})}}catch(e){return{statusCode:l.default.INTERNAL_SERVER_ERROR.code,headers:{"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},body:JSON.stringify({error:e})}}};t.default=u},"./src/controllers/user/validateToken.js":
/*!***********************************************!*\
  !*** ./src/controllers/user/validateToken.js ***!
  \***********************************************/
/*! exports provided: validateToken, default */function(e,t,r){"use strict";r.r(t),r.d(t,"validateToken",function(){return i});var s=r(/*! jsonwebtoken */"jsonwebtoken"),n=r.n(s),o=r(/*! dotenv */"dotenv"),a=r.n(o),d=r(/*! ../../status */"./src/status.js");a.a.config();const i=async e=>{const{token:t}=JSON.parse(e.body),{SECRET:r}=e.stageVariables||{SECRET:"weednaoehganja"};try{const e=await n.a.verify(t,r);return{statusCode:200,headers:{"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},body:JSON.stringify(e)}}catch(e){return{statusCode:d.default.UNAUTHORIZED.code,headers:{"Access-Control-Allow-Credentials":!0,"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},body:JSON.stringify({error:d.default.UNAUTHORIZED.tag})}}};t.default=i},"./src/controllers/utils.js":
/*!**********************************!*\
  !*** ./src/controllers/utils.js ***!
  \**********************************/
/*! exports provided: hashPassword, default */function(e,t,r){"use strict";r.r(t),r.d(t,"hashPassword",function(){return o});var s=r(/*! bcrypt */"bcrypt"),n=r.n(s);const o=async e=>{return await new Promise((t,r)=>{n.a.hash(e,10,(e,s)=>{e&&r(e),t(s)})})};t.default=o},"./src/db/Mongodb.js":
/*!***************************!*\
  !*** ./src/db/Mongodb.js ***!
  \***************************/
/*! exports provided: default */function(e,t,r){"use strict";r.r(t);var s=r(/*! mongoose */"mongoose"),n=r.n(s),o=r(/*! ./models/users.model */"./src/db/models/users.model.js");n.a.Promise=global.Promise,t.default=async({conn:e,mongoUrl:t="mongodb://localhost/auth-ida"})=>{try{if(!e){console.log("=> using new database connection"),n.a.model("users",o.default);const e=await n.a.createConnection(t,{bufferCommands:!1,bufferMaxEntries:0,keepAlive:!0});return e.model("users",o.default),e}return console.log("=> using existing database connection"),e}catch(e){throw e}}},"./src/db/models/users.model.js":
/*!**************************************!*\
  !*** ./src/db/models/users.model.js ***!
  \**************************************/
/*! exports provided: default */function(e,t,r){"use strict";r.r(t);var s=r(/*! mongoose */"mongoose");const n=new s.Schema({username:{type:String,unique:!0,required:!0},password:{type:String,required:!0},active:{type:Boolean,default:!0},email:{address:{type:String,default:null,lowercase:!0},token:{type:String,default:null},valid:{type:Boolean,default:!1}},phone:{number:{type:String,default:null},valid:{type:Boolean,default:!1},confirmation_code:{type:String,default:null}},reseted_passwords:[{password:{type:String,required:!0},date:{type:Date,required:!0,default:Date.now()},used_token:{type:String,required:!0}}],last_login:{type:Date,default:Date.now()}},{usePushEach:!0,timestamps:{updatedAt:"updated_at",createdAt:"created_at"}});t.default=n},"./src/status.js":
/*!***********************!*\
  !*** ./src/status.js ***!
  \***********************/
/*! exports provided: default */function(e,t,r){"use strict";r.r(t),t.default={SUCCESS:{code:200,tag:"success"},CREATED:{code:201,tag:"register"},ACCEPTED:{code:202,tag:"accepted"},BAD_REQUEST:{code:400,tag:"bad-request"},UNAUTHORIZED:{code:401,tag:"unauthorized"},INTERNAL_SERVER_ERROR:{code:500,tag:"internal-server-error"}}},"aws-sdk":
/*!**************************!*\
  !*** external "aws-sdk" ***!
  \**************************/
/*! no static exports found */function(e,t){e.exports=require("aws-sdk")},bcrypt:
/*!*************************!*\
  !*** external "bcrypt" ***!
  \*************************/
/*! no static exports found */function(e,t){e.exports=require("bcrypt")},dotenv:
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/*! no static exports found */function(e,t){e.exports=require("dotenv")},jsonwebtoken:
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/*! no static exports found */function(e,t){e.exports=require("jsonwebtoken")},mongoose:
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/*! no static exports found */function(e,t){e.exports=require("mongoose")}});
//# sourceMappingURL=index.js.map